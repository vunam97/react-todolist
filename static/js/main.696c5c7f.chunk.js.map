{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["ButtonStyled","styled","Button","p","isCompleted","css","Todo","todo","onCheckBtnClick","onDeleteBtnClick","shouldFitContainer","iconAfter","className","onClick","id","primaryColor","name","appearance","TodoList","todoList","map","TODO_APP_STORAGE_KEY","App","useState","setTodoList","textInput","setTextInput","useEffect","storageTodoList","localStorage","getItem","JSON","parse","setItem","stringify","onTextInputChange","useCallback","e","target","value","onAddBtnClick","v4","prevState","filter","placeholder","elemAfterInput","isDisabled","padding","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAKMA,EAAeC,YAAOC,IAAPD,CAAH,mXAMR,SAAAE,GAAC,OACCA,EAAEC,aACFC,YADA,2FAsBG,SAASC,EAAT,GAA4D,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,iBAClD,OACI,gCACI,cAACT,EAAD,CACII,YAAeG,EAAKH,YACpBM,oBAAkB,EAClBC,WACKJ,EAAKH,aACN,sBACIQ,UAAU,aACVC,QAAS,kBAAML,EAAgBD,EAAKO,KAFxC,SAII,cAAC,IAAD,CAAWC,aAAa,cATpC,SAcKR,EAAKS,OAEV,cAAC,IAAD,CACIC,WAAW,SACXJ,QAAS,kBAAMJ,EAAiBF,EAAKO,KAFzC,uBClDG,SAASI,EAAT,GAAoE,IAAhDC,EAA+C,EAA/CA,SAAUX,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,iBAC1D,OACI,8BAEQU,EAASC,KAAI,SAACb,GAAD,OACT,cAACD,EAAD,CAEIC,KAAMA,EACNC,gBAAiBA,EACjBC,iBAAkBA,GAHbF,EAAKO,S,oBCH5BO,EAAuB,WAgFdC,MA9Ef,WACE,MAAgCC,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAkBC,aAAaC,QAAQT,GAC1CO,GACDJ,EAAYO,KAAKC,MAAMJ,MAExB,IAEHD,qBAAU,WACRE,aAAaI,QAAQZ,EAAsBU,KAAKG,UAAUf,MACzD,CAACA,IAEJ,IAAMgB,EAAoBC,uBACxB,SAACC,GACCX,EAAaW,EAAEC,OAAOC,SAExB,IAGIC,EAAgBJ,uBACpB,SAACC,GAECb,EAAY,CACV,CAACV,GAAI2B,cAAMzB,KAAMS,EAAWrB,aAAa,IADhC,mBAENe,KAELO,EAAa,MAGf,CAACD,EAAWN,IAGRV,EAAmB2B,uBACvB,SAACtB,GACCU,GAAY,SAAAkB,GAAS,OAAIA,EAAUC,QAAO,SAAApC,GAAI,OAAIA,EAAKO,KAAOA,UAEhE,IAGIN,EAAkB4B,uBACtB,SAACtB,GACCU,GAAY,SAAAkB,GAAS,OAAIA,EAAUtB,KAAI,SAAAb,GAAI,OAAIA,EAAKO,KAAOA,EAAZ,2BAAsBP,GAAtB,IAA4BH,aAAa,IAAQG,UAElG,IAGF,OACE,gCACE,8DACA,cAAC,IAAD,CACES,KAAK,WACL4B,YAAY,oCACZC,eACE,cAAC,IAAD,CACEC,YAAarB,EACbR,WAAW,UACXJ,QAAS2B,EAHX,qBASJnC,IAAK,CAAE0C,QAAS,eAChBR,MAAOd,EACPuB,SAAUb,IAEV,cAACjB,EAAD,CACEC,SAAUA,EACVX,gBAAiBA,EACjBC,iBAAkBA,QC3E1BwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.696c5c7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@atlaskit/button';\r\nimport styled, { css } from 'styled-components';\r\nimport CheckIcon from '@atlaskit/icon/glyph/check';\r\n\r\nconst ButtonStyled = styled(Button)`\r\n    margin-top: 5px;\r\n    text-align: left;\r\n\r\n    &,\r\n    &:hover{\r\n        ${p => \r\n            p.isCompleted &&\r\n            css`\r\n                text-decoration: line-through;\r\n            `}\r\n    }\r\n   \r\n    &:hover{\r\n        .check-icon {\r\n            display: inline-block;\r\n        } \r\n    }\r\n\r\n    .check-icon {\r\n        display: none;\r\n\r\n        &:hover {\r\n            background-color: #e2e2e2;\r\n            border-radius: 50%;\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Todo({ todo, onCheckBtnClick, onDeleteBtnClick }) {\r\n    return (\r\n        <div>\r\n            <ButtonStyled \r\n                isCompleted = {todo.isCompleted}\r\n                shouldFitContainer \r\n                iconAfter={\r\n                    !todo.isCompleted && (\r\n                    <span \r\n                        className='check-icon' \r\n                        onClick={() => onCheckBtnClick(todo.id)}\r\n                    >\r\n                        <CheckIcon primaryColor=\"#4fff4f\" />\r\n                    </span>\r\n                    )\r\n                }\r\n            >\r\n                {todo.name}\r\n            </ButtonStyled>\r\n            <Button\r\n                appearance=\"danger\"\r\n                onClick={() => onDeleteBtnClick(todo.id)}\r\n            >\r\n                    Xóa\r\n            </Button>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList({ todoList, onCheckBtnClick, onDeleteBtnClick }) {\r\n    return (\r\n        <div>\r\n            {\r\n                todoList.map((todo) => (\r\n                    <Todo \r\n                        key={todo.id} \r\n                        todo={todo} \r\n                        onCheckBtnClick={onCheckBtnClick} \r\n                        onDeleteBtnClick={onDeleteBtnClick}\r\n                    />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import TodoList from \"./components/TodoList\";\nimport Textfield from '@atlaskit/textfield'\nimport Button from '@atlaskit/button';\nimport { useCallback, useState, useEffect } from 'react'\nimport { v4 } from 'uuid'\n\nconst TODO_APP_STORAGE_KEY = 'TODO_APP'\n\nfunction App() {\n  const [todoList, setTodoList] = useState([])\n  const [textInput, setTextInput] = useState(\"\")\n\n  useEffect(() => {\n    const storageTodoList = localStorage.getItem(TODO_APP_STORAGE_KEY)\n    if(storageTodoList){\n      setTodoList(JSON.parse(storageTodoList))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(TODO_APP_STORAGE_KEY, JSON.stringify(todoList))\n  }, [todoList])\n\n  const onTextInputChange = useCallback(\n    (e) => {\n      setTextInput(e.target.value)\n    },\n    [],\n  )\n\n  const onAddBtnClick = useCallback(\n    (e) => {\n      //Them Text Input vào danh sách TodoLisst\n      setTodoList([\n        {id: v4(), name: textInput, isCompleted: false},\n        ...todoList, \n      ]);\n      setTextInput(\"\")\n\n    },\n    [textInput, todoList],\n  )\n\n  const onDeleteBtnClick = useCallback(\n    (id) => {\n      setTodoList(prevState => prevState.filter(todo => todo.id !== id ))\n    },\n    [],\n  )\n\n  const onCheckBtnClick = useCallback(\n    (id) => {\n      setTodoList(prevState => prevState.map(todo => todo.id === id ? { ...todo, isCompleted: true} : todo))\n    },\n    [],\n  )\n\n  return (\n    <div>\n      <h3>Danh sách cần làm</h3>\n      <Textfield \n        name=\"add-todo\" \n        placeholder=\"Thêm việc cần làm\" \n        elemAfterInput={\n          <Button \n            isDisabled={!textInput} \n            appearance='primary' \n            onClick={onAddBtnClick}\n\n          >\n            Thêm\n          </Button>\n      }\n      css={{ padding: \"2px 4px 2px\"}}\n      value={textInput}\n      onChange={onTextInputChange}\n      ></Textfield>\n      <TodoList \n        todoList={todoList} \n        onCheckBtnClick={onCheckBtnClick} \n        onDeleteBtnClick={onDeleteBtnClick}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}